$date
	Fri Feb 09 10:21:15 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! CarryOut $end
$var wire 8 " ALU_Out [7:0] $end
$var reg 8 # A [7:0] $end
$var reg 4 $ ALU_Sel [3:0] $end
$var reg 8 % B [7:0] $end
$var integer 32 & i [31:0] $end
$scope module dut $end
$var wire 8 ' A [7:0] $end
$var wire 8 ( ALU_Out [7:0] $end
$var wire 4 ) ALU_Sel [3:0] $end
$var wire 8 * B [7:0] $end
$var wire 9 + tmp [8:0] $end
$var wire 1 ! CarryOut $end
$var reg 8 , ALU_Result [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1100 ,
b1100 +
b10 *
b0 )
b1100 (
b1010 '
b0 &
b10 %
b0 $
b1010 #
b1100 "
0!
$end
#10000
b1000 "
b1000 (
b1000 ,
b1 &
b1 $
b1 )
#20000
b10100 "
b10100 (
b10100 ,
b10 &
b10 $
b10 )
#30000
b101 "
b101 (
b101 ,
b11 &
b11 $
b11 )
#40000
b10100 "
b10100 (
b10100 ,
b100 &
b100 $
b100 )
#50000
b101 "
b101 (
b101 ,
b101 &
b101 $
b101 )
#60000
b10 "
b10 (
b10 ,
b110 &
b110 $
b110 )
#70000
b1010 "
b1010 (
b1010 ,
b111 &
b111 $
b111 )
#80000
b1000 "
b1000 (
b1000 ,
b1000 &
b1000 $
b1000 )
#90000
b1 "
b1 (
b1 ,
b1001 &
b1001 $
b1001 )
#100000
b0 "
b0 (
b0 ,
b1010 &
b1010 $
b1010 )
#110000
b1100 "
b1100 (
b1100 ,
b1011 &
b1011 $
b1011 )
#120000
1!
b0 "
b0 (
b0 ,
b1010 %
b1010 *
b100000000 +
b11110110 #
b11110110 '
b1100 &
b1100 $
b1100 )
